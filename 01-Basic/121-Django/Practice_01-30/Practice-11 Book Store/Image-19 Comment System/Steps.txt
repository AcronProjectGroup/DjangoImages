*BEFORE: In this Image use virtualenv.

#### ############ ############  
####              ############  
#### I use pipenv ############ `
####              ############  
#### ############ ############ 

================================================================================================================
1-
python3.12 -m venv venv
python3.10 -m venv venv




================================================================================================================
2-
source ./venv/bin/activate





================================================================================================================
3-
pip install django






================================================================================================================
4-
pip freeze > requirements.txt



================================================================================================================
5-
django-admin startproject config .




================================================================================================================
6-
python manage.py startapp accounts




================================================================================================================
7- Add "accounts" in settings.py/--> INSTALLED_APPS
'accounts',




================================================================================================================
8- In END > config/settings.py
AUTH_USER_MODEL = 'accounts.CustomUser'




================================================================================================================
9- Create CustomUser in accounts/models.py
from django.contrib.auth.models import AbstractUser
class CustomUser(AbstractUser):
    age = models.IntegerField(null=True, blank=True)





================================================================================================================
10- Create forms.py file in accounts
forms.py




================================================================================================================
11- In forms.py create CustomUserCreationForm class






================================================================================================================
12- In forms.py create CustomUserChangeForm class
from django.contrib.auth.forms import UserCreationForm, UserChangeForm
from .models import CustomUser
class CustomUserCreationForm(UserCreationForm):
    class Meta:
        model = CustomUser
        fields = UserCreationForm.Meta.fields + ('age' , )
class CustomUserChangeForm(UserChangeForm):
    class Meta:
        model = CustomUser
        fields = UserChangeForm.Meta.fields







================================================================================================================
13- In accounts/admin.py create CustomUserAdmin class
from django.contrib.auth.admin import UserAdmin
from .forms import CustomUserChangeForm, CustomUserCreationForm
from .models import CustomUser
class CustomUserAdmin(UserAdmin):
    add_form = CustomUserCreationForm
    form = CustomUserChangeForm
    model = CustomUser
admin.site.register(CustomUser, CustomUserAdmin)






================================================================================================================
14- In Terminal
python manage.py makemigrations accounts

Output:
    Migrations for 'accounts':
    accounts/migrations/0001_initial.py
        - Create model CustomUser





================================================================================================================
15-In Terminal
python manage.py migrate

Output:
    Operations to perform:
    Apply all migrations: accounts, admin, auth, contenttypes, sessions
    Running migrations:
    Applying contenttypes.0001_initial... OK
    Applying contenttypes.0002_remove_content_type_name... OK
    Applying auth.0001_initial... OK
    Applying auth.0002_alter_permission_name_max_length... OK
    Applying auth.0003_alter_user_email_max_length... OK
    Applying auth.0004_alter_user_username_opts... OK
    Applying auth.0005_alter_user_last_login_null... OK
    Applying auth.0006_require_contenttypes_0002... OK
    Applying auth.0007_alter_validators_add_error_messages... OK
    Applying auth.0008_alter_user_username_max_length... OK
    Applying auth.0009_alter_user_last_name_max_length... OK
    Applying auth.0010_alter_group_name_max_length... OK
    Applying auth.0011_update_proxy_permissions... OK
    Applying auth.0012_alter_user_first_name_max_length... OK
    Applying accounts.0001_initial... OK
    Applying admin.0001_initial... OK
    Applying admin.0002_logentry_remove_auto_add... OK
    Applying admin.0003_logentry_add_action_flag_choices... OK
    Applying sessions.0001_initial... OK





================================================================================================================
16- Create super user
python manage.py createsuperuser




================================================================================================================
17- Run server
python manage.py runserver




================================================================================================================
18- Check browser user > admin user details > shouldn't be age shows = True





================================================================================================================
19- In admin.py add fieldsets in CustomUserAdmin class
fieldsets = UserAdmin.fieldsets + ((None, {'fields': ('age', )}),) 





================================================================================================================
20- Refresh browser / Check in end of Link, age should be shows
http://127.0.0.1:8000/admin/accounts/customuser/1/change/ 





================================================================================================================
21- In browser > admin panel > ADD USER button => shouldn't be age
http://127.0.0.1:8000/admin/accounts/customuser/add/





================================================================================================================
22- In admin.py add add_fieldsets, in CustomUserAdmin class
add_fieldsets = UserAdmin.add_fieldsets + ((None, {'fields': ('age', )}),) 





================================================================================================================
23- Refresh browser > check 'age' field, should be added.
http://127.0.0.1:8000/admin/accounts/customuser/add/






================================================================================================================
24- In admin.py add list_display in CustomUserAdmin class
list_display = ['username', 'email', 'age', 'is_staff'] 





================================================================================================================
25- Refresh browser > check 'age' field, should be added.
http://127.0.0.1:8000/admin/accounts/customuser/





================================================================================================================
26- In config/urls.py create > in urlpatterns
from django.urls import path, include
# ...ATTENTION.. here is another python code
path('accounts/', include('django.contrib.auth.urls')), 





================================================================================================================
27- In config/urls.py create > in urlpatterns
path('accounts/', include('accounts.urls')),






================================================================================================================
28- Create urls.py in accounts directory





================================================================================================================
29- In accounts/urls >
from django.urls import path
urlpatterns = [
    # path('signup/', views.SignUpView.as_view(), name='signup'),
]





================================================================================================================
30- In current directory project create templates/registration/login.html
templates/registration/login.html





================================================================================================================
31- In current directory project create templates/_base.html
_base.html






================================================================================================================
32- Add these in _base.html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block page_title %}{% endblock %}</title>
</head>
<body>
    {% block content%}
    {% endblock %}
</body>
</html>




================================================================================================================
33- Add these in login.html
{% extends '_base.html' %}
{% block page_title %}
Login-eingeben
{% endblock %}
{% block content%}
    <form action="" method="post">
        {% csrf_token %}
        {{ form.as_p }}
        <button type="submit">Login</button>
    </form>
{% endblock %}





================================================================================================================
34- In Terminal
python manage.py runserver





================================================================================================================
35- Go to this Link , Check in browser > should get this error > TemplateDoesNotExist at /accounts/login/ -
http://127.0.0.1:8000/accounts/login/




================================================================================================================
36- In config/settings.py add in TEMPLATES > in 'DIRS'  =>  [str(BASE_DIR.joinpath('templates'))],




================================================================================================================
37- In config/settings.py add
LOGIN_REDIRECT_URL = 'home'


================================================================================================================
38- In config/settings.py add
LOGOUT_REDIRECT_URL = 'home'




================================================================================================================
39- In config/urls.py import this
from django.views.generic.base import TemplateView




================================================================================================================
40- In config/urls.py add this path
path('home/', TemplateView.as_view(template_name='home.html'), name='home'),





================================================================================================================
41- In current directory project create templates/home.html
home.html




================================================================================================================
42- Add these codes in home.html
{% extends '_base.html' %}
{% block page_title %}
Homepage-Startseite
{% endblock %}
{% block content%}
    <h1>Homepage-Startseite</h1>
    {% if user.is_authenticated %}
        <form action="{% url 'logout' %}" method="post">
            {% csrf_token %}
            <p>Welcome {{ user.username }} - <button type="submit">Logout</button>
            </p>
        </form>
    {% else %}
        <a href="{% url 'login' %}">Login</a> - Signup
    {% endif %}
{% endblock %}





================================================================================================================
43- uncomment path signup in accounts/url.py





================================================================================================================
44- In accounts/url.py import
from . import views




================================================================================================================
45- Create SignUpView class in accounts/views.py
from django.views import generic
from django.urls import reverse_lazy
from .forms import CustomUserCreationForm
class SignUpView(generic.CreateView):
    form_class = CustomUserCreationForm
    template_name = 'registration/signup.html'
    success_url = reverse_lazy('login')



================================================================================================================
46- In home.html Change this line
<a href="{% url 'login' %}">Login</a> - <a href="{% url 'signup' %}">Signup</a>





================================================================================================================
47- Create registration/signup.html file
signup.html




================================================================================================================
48- Add these codes in signup.html
{% extends '_base.html' %}
{% block page_title %}
Signup-Anmeldung
{% endblock %}
{% block content%}
    <form action="" method="post">
        {% csrf_token %}
        {{ form.as_p }}
        <button type="submit">Sigup</button>
    </form>
{% endblock %}




================================================================================================================
49- In this link Check everything. should be shows signup table
http://localhost:8000/accounts/signup/





================================================================================================================
50- In accounts/forms.py Change this line for class CustomUserCreationForm
fields = ('username', 'age', 'email', )




================================================================================================================
51- In accounts/forms.py Change this line for class CustomUserChangeForm
fields = ('username', 'age', 'email', )





================================================================================================================
52- Refresh browser and check should be add email field
http://localhost:8000/accounts/signup/




================================================================================================================
53- Go to admin panel and check user added




================================================================================================================
54- create new app > In Terminal
python manage.py startapp pages





================================================================================================================
55- Add to INSTALLED_APPS
'pages',




================================================================================================================
56- create in pages/urls.py file
urls.py




================================================================================================================
57- in config/urls.py Add this line
path('', include('pages.urls')),




================================================================================================================
58- in config/urls.py Cut this line
path('home/', TemplateView.as_view(template_name='home.html'), name='home'),





================================================================================================================
59- in pages/urls.py Paste clipboard
from django.urls import path
urlpatterns = [
    path('', TemplateView.as_view(template_name='home.html'), name='home'),
]





================================================================================================================
60- in pages/views.py
from django.views.generic.base import TemplateView
class HomePageView(TemplateView):
    template_name = 'home.html'






================================================================================================================
61- in pages/tests.py
from django.test import TestCase
from django.urls import reverse
class HomePageTests(TestCase):
    def test_home_page_url_by_name(self):
        response = self.client.get(reverse('home'))
        self.assertEqual(response.status_code, 200)




================================================================================================================
62- in Terminal write this and should be "OK"
python manage.py test

Output:
    Found 1 test(s).
    Creating test database for alias 'default'...
    System check identified no issues (0 silenced).
    .
    -
    Ran 1 test in 0.008s
    OK
    Destroying test database for alias 'default'...







================================================================================================================
63- another test in pages/tests.py in previous class
    ...
    def test_home_page_content(self):
        response = self.client.get(reverse('home'))
        self.assertContains(response, 'Homepage-Startseite')






================================================================================================================
64- in Terminal write this and should be "OK"
python manage.py test

Output:
    Found 2 test(s).
    Creating test database for alias 'default'...
    System check identified no issues (0 silenced).
    ..
    ================================================================================================================
    
    Ran 2 tests in 0.009s
    OK
    Destroying test database for alias 'default'...





================================================================================================================
65- another test in pages/tests.py in previous class
    ...
    def test_home_page_url(self):
        response = self.client.get('/')
        self.assertEqual(response.status_code, 200)





================================================================================================================
66- in Terminal write this and should be "OK"
python manage.py test

Output:
    Found 3 test(s).
    Creating test database for alias 'default'...
    System check identified no issues (0 silenced).
    ...
    ================================================================================================================
    
    Ran 3 tests in 0.010s
    OK
    Destroying test database for alias 'default'...






================================================================================================================
67- another test in pages/tests.py in previous class
    ...
    def test_home_page_template_used(self):
        response = self.client.get(reverse('home'))
        self.assertTemplateUsed(response, 'home.html')   





================================================================================================================
68- in Terminal write this and should be "OK"
python manage.py test

Output:
    Found 4 test(s).
    Creating test database for alias 'default'...
    System check identified no issues (0 silenced).
    ....
    ================================================================================================================
    
    Ran 4 tests in 0.015s
    OK
    Destroying test database for alias 'default'...





================================================================================================================
69- in accounts/tests.py
from django.test import TestCase
from django.urls import reverse
class SignUpPageTests(TestCase):
    def test_signup_url_bu_name(self):
        response = self.client.get(reverse('signup'))
        self.assertEqual(response.status_code, 200)
        



================================================================================================================
70- in Terminal write this and should be "OK"
python manage.py test

Output:
    Found 5 test(s).
    Creating test database for alias 'default'...
    System check identified no issues (0 silenced).
    .....
    ================================================================================================================
    
    Ran 5 tests in 0.031s
    OK
    Destroying test database for alias 'default'...





================================================================================================================
71- another test in accounts/tests.py in previous class
    ...
    def test_signup_url(self):
        response = self.client.get('/accounts/signup/')
        self.assertEqual(response.status_code, 200)



================================================================================================================
72- in Terminal write this and should be "OK"
python manage.py test

Output:
    Found 6 test(s).
    Creating test database for alias 'default'...
    System check identified no issues (0 silenced).
    ......
    
    Ran 6 tests in 0.036s
    OK
    Destroying test database for alias 'default'...




================================================================================================================
73- import to accounts/tests.py
from django.contrib.auth import get_user_model





================================================================================================================
74- another test in accounts/tests.py in previous class
    ...
    def test_signup_form(self):
        user = get_user_model().objects.create_user(
            'SINA',
            'email@gmail.com',
        )
        self.assertEqual(get_user_model().objects.all().count(), 1)
        self.assertEqual(get_user_model().objects.all()[0].username, 'SINA')
        self.assertEqual(get_user_model().objects.all()[0].email, 'email@gmail.com')




================================================================================================================
75- in Terminal write this and should be "OK"
python manage.py test

Output:
    Found 7 test(s).
    Creating test database for alias 'default'...
    System check identified no issues (0 silenced).
    .......
    
    Ran 7 tests in 0.050s
    OK
    Destroying test database for alias 'default'...




================================================================================================================
76- First -> in accounts/tests.py in previous class
    username = 'SINA'
    email = 'email@gmail.com'
    ...





================================================================================================================
77- Change in test method with name test_signup_form(self)
    ...
    def test_signup_form(self):
        user = get_user_model().objects.create_user(
            self.username,
            self.email,
        )
        self.assertEqual(get_user_model().objects.all().count(), 1)
        self.assertEqual(get_user_model().objects.all()[0].username, self.username)
        self.assertEqual(get_user_model().objects.all()[0].email, self.email)




================================================================================================================
78- in Terminal write this and should be "OK"
python manage.py test

Output:
    ...
    Ran 7 tests in 0.038s
    OK
    ...





================================================================================================================
79- in Terminal write
pipenv install django-crispy-forms





================================================================================================================
80- in Terminal write
pipenv requirements > requirements.txt 





================================================================================================================
81- Check requirements.txt should like this
-i https://pypi.org/simple
asgiref==3.7.2; python_version >= '3.7'
django==5.0; python_version >= '3.10'
django-crispy-forms==2.1; python_version >= '3.8'
sqlparse==0.4.4; python_version >= '3.5'
typing-extensions==4.9.0; python_version < '3.11'






================================================================================================================
82- Change INSTALLED_APPS in config/settings.py like this
INSTALLED_APPS = [
    # Django Original
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # Created
    'accounts',
    'pages',
    # Imported OR third party
    'crispy_forms',
]





================================================================================================================
83- add this end of config/settings.py
# crispy forms settings
CRISPY_TEMPLATE_PACK = 'bootstrap4'





================================================================================================================
84- in Terminal write
pipenv install crispy-bootstrap4

# Source: https://pypi.org/project/crispy-bootstrap4/





================================================================================================================
85- add this in INSTALLED_APPS > config/settings.py
...
'crispy_bootstrap4',




================================================================================================================
86- in templates/registration/signup.html
{% load crispy_forms_tags %}





================================================================================================================
87- Change line number 10, (form) in templates/registration/signup.html
{{ form|crispy }}





================================================================================================================
88- Check site should change in this link:
http://127.0.0.1:8000/accounts/signup/





================================================================================================================
89- Add this code in templates/_base.html in Head tag
...
<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
...






================================================================================================================
90- Check site should change in this link:
http://127.0.0.1:8000/accounts/signup/





================================================================================================================
91- Change this in _base.html
...
<body>
<div class="container">
    {% block content%}
    {% endblock %}
</div>
</body>
...





================================================================================================================
92- Check site should change in this link: -
http://127.0.0.1:8000/accounts/signup/





================================================================================================================
93- in signup.html add class to button -
...
<button class="btn btn-success" type="submit">Sigup</button>
...




############                #####################################################
############                #####################################################
############ Password reset #####################################################
############ Password reset #####################################################
############                #####################################################




================================================================================================================
94- create in templates/registration/password_change_form.html --
password_change_form.html





================================================================================================================
95- Add sample text in password_change_form.html 
{% extends '_base.html' %}
{% block content%}
Password Change Here Sina!
{% endblock %}





================================================================================================================
96- Login to site ++ Check this link should be explosion --
http://127.0.0.1:8000/accounts/password_change/

Output:
    Password Change Here Sina! 





================================================================================================================
97- add this to config/urls.py 
# For reading this madule
# from django.contrib.auth import urls





================================================================================================================
98- Logout from site ++ Check this link should see django default reset password with email. 
http://127.0.0.1:8000/accounts/password_reset/ 




================================================================================================================
99- Change code in templates/registration/password_change_form.html 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}
Password Change
{% endblock %}
{% block content%}
    <h1 class="mt-3">Password Change - Kennwort ändern</h1>
    <form action="" method="post">
        {% csrf_token %}
        {{ form|crispy }}
        <button class="btn btn-success mt-3" type="submit">Confirm</button>
    </form>
{% endblock %}




================================================================================================================
100- Check this link should be change 
http://127.0.0.1:8000/accounts/password_change/






================================================================================================================
101- Create tis file in templates/registration/password_change_done.html 
password_change_done.html





================================================================================================================
102- add this code to password_change_done.html 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}
Pass Changed 
{% endblock %}
{% block content%}
    <h1>Password Changed :)</h1>
{% endblock %}





================================================================================================================
103- in end of config/settings.py 
# Email config
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBack

# Source https://docs.djangoproject.com/en/5.0/topics/email/
# another source: https://github.com/wsvincent/django-auth-tutorial
# another source: https://ruddra.com/implementation-of-forgot-reset-password-feature-in-django/





================================================================================================================
104- Logout and Go in browser: 
http://127.0.0.1:8000/accounts/password_reset/

Output:
    [11/Dec/2023 10:45:14] "GET /accounts/password_reset/ HTTP/1.1" 200 4053
    Content-Type: text/plain; charset="utf-8"
    MIME-Version: 1.0
    Content-Transfer-Encoding: 8bit
    Subject: Password reset on 127.0.0.1:8000
    From: webmaster@localhost
    To: sina@sina.com
    Date: Mon, 11 Dec 2023 10:45:24 -0000
    Message-ID: <170229152453.18092.4455898355979210504@linux>
    You're receiving this email because you requested a password reset for your user account at 127.0.0.1:8000.
    Please go to the following page and choose a new password:
    http://127.0.0.1:8000/accounts/reset/MQ/bz1hvo-39177a48e37fc48fd39308541826be5e/
    Your username, in case you’ve forgotten: sina
    Thanks for using our site!
    The 127.0.0.1:8000 team
    
    
    [11/Dec/2023 10:45:24] "POST /accounts/password_reset/ HTTP/1.1" 302 0
    [11/Dec/2023 10:45:24] "GET /accounts/password_reset/done/ HTTP/1.1" 200 3623




================================================================================================================
105- Click on the link created in Terminal , like this
http://127.0.0.1:8000/accounts/reset/MQ/set-password/




================================================================================================================
106- Change password , if you change with true parameters browser will redirect to -
http://127.0.0.1:8000/accounts/reset/done/





================================================================================================================
107- create this file in templates/registration/... 
password_reset_form.html
password_reset_done.html
password_reset_confirm.html
password_reset_complete.html





================================================================================================================
108- add this to password_change_form.html 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}
Password Reset
{% endblock %}
{% block content%}
    <h1 class="mt-3">Password Reset - Passwort zurücksetzen</h1>
    <form action="" method="post">
        {% csrf_token %}
        {{ form|crispy }}
        <button class="btn btn-success mt-3" type="submit">Send Email</button>
    </form>
{% endblock %}





================================================================================================================
109- Check this link should be change , followed by above codes 
http://127.0.0.1:8000/accounts/password_reset/






================================================================================================================
110- add this to password_reset_done.html 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}
Password Reset
{% endblock %}
{% block content%}
    <h1 class="mt-3">Link Sent to your address.</h1>
    <h1 class="mt-3">Link wird an Ihre Adresse gesendet.</h1>
{% endblock %}




================================================================================================================
111- Check this link should be change you wrote above code -
http://127.0.0.1:8000/accounts/password_reset/done/




================================================================================================================
112- add this to password_reset_confirm.html 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}
Set new password
{% endblock %}
{% block content%}
    <h1 class="mt-3">Set new password - Kennwort ändern</h1>
    <form action="" method="post">
        {% csrf_token %}
        {{ form|crispy }}
        <button class="btn btn-success mt-3" type="submit">Set new password</button>
    </form>
{% endblock %}




================================================================================================================
113- add this to password_reset_complete.html 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}
Password Reset
{% endblock %}
{% block content%}
    <h1 class="mt-3">Password reset complete</h1>
    <h1 class="mt-3">Passwort-Reset abgeschlossen</h1>
    <p>You can login now <a href="{% url 'login'%}">Login</a></p>
{% endblock %}






================================================================================================================
114- after write good password you redirect to this link. should changed like previous code 
http://127.0.0.1:8000/accounts/reset/done/





================================================================================================================
115- change this for login.html 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}
Login-eingeben
{% endblock %}
{% block content%}
    <h1 class="mt-3">Login</h1>
    <form action="" method="post">
        {% csrf_token %}
        {{ form|crispy }}
        <button class="btn btn-success mt-3" type="submit">Login</button>
    </form>
    <a href="{% url 'password_reset'%}" class="btn btn-sm btn-warning mt-3">Forgot password?</a>
{% endblock %}





================================================================================================================
116- check this link should be changed to previous code
http://127.0.0.1:8000/accounts/login/




================================================================================================================
117- add this to after form to signup.html 
...
<a href="{% url 'login'%}" class="btn btn-sm btn-warning mt-3">Login</a>
...




================================================================================================================
118- check this link should be changed 
http://127.0.0.1:8000/accounts/signup/





================================================================================================================
119- create this file in templates/registration/password_reset_email.html 
password_reset_email.html




================================================================================================================
120- add this code to password_reset_email.html 
Hello, {{ user.username }}
Someone just asked for password reset of this email: {{ email }}
if it was true:
{{ protocol }}://{{ domain }}{% url 'password_reset_confirm' uidb64=uid token=token %}
if you forgot your username: {{ user.username }}






================================================================================================================---
121- email reset again, check Terminal logs should be like this

Output:
    Content-Type: text/plain; charset="utf-8"
    MIME-Version: 1.0
    Content-Transfer-Encoding: 7bit
    Subject: Password reset on 127.0.0.1:8000
    From: webmaster@localhost
    To: sina@sina.com
    Date: Mon, 11 Dec 2023 13:07:45 -0000
    Message-ID: <111.111.1111@linux>
    Hello, sina
    Someone just asked for password reset of this email: sina@sina.com
    if it was true:
    http://127.0.0.1:8000/accounts/reset/MQ/bz1ogx-86a93b0aa7151fb7c0474e7d12eb5c17/
    if you forgot your username: sina
    
    

######################### ################# ##################################################
#########################                   ##################################################
#########################                   ##################################################
######################### Create Book Model ##################################################
#########################                   ##################################################



================================================================================================================
122- in Terminal 
python manage.py startapp books






================================================================================================================
123- add it to config/settings.py > INSTALLED_APPS list 
'books',




================================================================================================================
124- create new model in books/models.py 
...
class Book(models.Model):
    title = models.CharField(max_length=200)
    author = models.CharField(max_length=200)
    description = models.TextField()
    price = models.DecimalField(max_digits=5, decimal_places=2) 
    def __str__(self):
        return self.title






================================================================================================================
125- in terminal for this [ Model+(migrations) > migration+(migrate) > DB ]
python manage.py makemigrations books 

Output:
    Migrations for 'books':
    books/migrations/0001_initial.py
        - Create model Book





================================================================================================================
126- Check books/migrations/0001_initial.py like this
# Generated by Django 5.0 on 2023-12-11 13:41
from django.db import migrations, models
class Migration(migrations.Migration):
    initial = True
    dependencies = [
    ]
    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('author', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=5)),
            ],
        ),
    ]




================================================================================================================
127- in terminal write 
python manage.py migrate

Output:
    Operations to perform:
        Apply all migrations: accounts, admin, auth, books, contenttypes, sessions
    Running migrations:
        Applying books.0001_initial... OK




================================================================================================================
128- add this to books/admin.py 
from django.contrib import admin
from .models import Book
admin.site.register(Book)





================================================================================================================
129- check admin panel should be added 
http://127.0.0.1:8000/admin/




================================================================================================================
130- add a book from admin panel 




================================================================================================================
131- add this in books/views.py 
from django.shortcuts import render
from django.views import generic
from .models import Book
class BookListView(generic.ListView):
    model = Book
    template_name = 'books/book_list.html'
    context_object_name = 'books'




================================================================================================================
132- create urls.py in books directory 
urls.py




================================================================================================================
133-add this in books/urls.py 
from django.urls import path
from .views import BookListView
urlpatterns = [
    path('', BookListView.as_view(), name='book_list'),
]




================================================================================================================-
134- add this path to config/settings.py 
...
path('books/', include('books.urls')),






================================================================================================================
135- Create in books/templates/books/book_list.html






================================================================================================================--
136- add this code to book_list.html 
{% extends '_base.html' %}
{% block page_title %}Book list{% endblock %}
{% block content%}
    {% for book in books %}
        <h1>book.title</h1>
        <p>{{book.description}}</p>
        <br>
    {% endfor %}
{% endblock %}


================================================================================================================
137- add another book in 
http://127.0.0.1:8000/admin/books/book/





================================================================================================================
138- Check this link should be shows two title books 
http://127.0.0.1:8000/books/






================================================================================================================
139- create this class to books/views.py  
class BookDetailView(generic.DeleteView):
    model = Book
    template_name = 'books/book_detail.html'
    





================================================================================================================
140- create this file books/templates/books/book_detail.html 
book_detail.html


================================================================================================================-
141- add these codes to book_detail.html 
{% extends '_base.html' %}
{% block page_title %}{{book.title}}{% endblock %}
{% block content%}
    <h1 class="mt-3">{{book.title}}</h1>
    <p>Author: {{book.author}}</p>
    <p>Description: {{book.description}}</p>
    <p>Price: {{book.price}}</p>
    <br>
{% endblock %}





================================================================================================================
142- add this path to books/urls.py 
...
from .views import BookDetailView
...
path('<int:pk>/', BookDetailView.as_view(), name='book_detail'),



================================================================================================================
143- Check in browser this link, should be shows detail of book added
http://127.0.0.1:8000/books/1/
OR
http://127.0.0.1:8000/books/2/





================================================================================================================
144- Check in title bar browser this link, should be change with title of book
http://127.0.0.1:8000/books/1/
OR
http://127.0.0.1:8000/books/2/




================================================================================================================
145- import to books/models.py 
from django.urls import reverse








================================================================================================================
146- add this in class Book model > books/models.py -
...
def get_absolute_url(self):
    return reverse('book_detail', args=[self.id])





================================================================================================================
147- change this part of book_list.html 
...
<a href="{{ book.get_absolute_url }}">
    <h1 class="mt-3">{{book.title}}</h1>
</a>
...





================================================================================================================
148- create class for create view in books/views.py --
...
class BookCreateView(generic.CreateView):
    model = Book
    template_name = 'books/book_create.html'     





================================================================================================================
149- Create this file books/templates/books/book_create.html -
book_create.html




================================================================================================================
150- add path to books/urls.py 
...
path('create/', BookCreateView.as_view(), name="book_create"),




================================================================================================================
151- add these to end of the book_list.html 
...
<a href="{% url 'book_create' %}" class="btn btn-success">Create New Book</a>





================================================================================================================
152- add this in book_create.html 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}Edit: {{book.title}}{% endblock %}
{% block content%}
    <form action="" method="post" class="mt-3">
        {% csrf_token %}
        {{form|crispy}}
    </form>
    <br>
    <a href="{% url 'book_list' %}" class="btn btn-success">Back - zurück kommen</a>
{% endblock %}





================================================================================================================
153- add new book with this link ++ after created should be redirect 
http://127.0.0.1:8000/books/new/





================================================================================================================
154- create class for update view in books/views.py 
...
class BookUpdateView(generic.UpdateView):
    model = Book
    fields = ['title', 'author', 'description']
    template_name = 'books/book_update.html'
    




================================================================================================================
155- create file books/templates/books/book_update.html 
book_update.html





================================================================================================================
156- add these to book_update.html 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}Edit: {{book.title}}{% endblock %}
{% block content%}
    <form action="" method="post" class="mt-3">
        {% csrf_token %}
        {{form|crispy}}
        <button class="btn btn-success mt-3" type="submit">Edit</button>
    </form>
    <br>
    <a href="{% url 'book_list' %}" class="btn btn-success">Back - zurück kommen</a>
{% endblock %}





================================================================================================================
157- import this in books/urls.py 
from .views import BookUpdateView





================================================================================================================ 
158- add path to books/urls.py 
path('<int:pk>/edit', BookUpdateView.as_view(), name="book_update"),




================================================================================================================
159- add button in book_detail.html 
...
<a href="{% url 'book_update' book.id %}" class="btn btn-warning">Edit - bearbeiten</a>
...




================================================================================================================
160- import this in first books/views.py 
from django.urls import reverse_lazy





================================================================================================================
161- Create class Delete view in books/views.py  
class BookDeleteView(generic.DeleteView):
    model = Book
    template_name = 'books/book_delete.html'
    success_url = reverse_lazy('book_list')





================================================================================================================
162- Create this file books/templates/books/book_delete.html 
book_delete.html




================================================================================================================
163- add these codes to book_delete.html  
{% extends '_base.html' %}
{% block page_title %}Delete: {{book.title}}{% endblock %}
{% block content%}
    <form action="" method="post" class="mt-3">
        {% csrf_token %}
        <h1>Delete: "{{book.title}}" Book</h1>
        <h3 class="mt-3" style='color:#ff00c8;'>Are you sure ?</h3>
        <button class="btn btn-danger mt-3" type="submit">Delete - Löschen</button>
    </form>
    <br>
    <a href="{% url 'book_list' %}" class="btn btn-success">Back - zurück kommen</a>
{% endblock %}






================================================================================================================
164- add path to books/urls.py
path('<int:pk>/delete/', BookDeleteView.as_view(), name='book_delete'),





================================================================================================================
165- Check and Delete a book should be done without errors



######################### Template Filters ###################################################### 
######################### Template Filters ###################################################### 
######################### Template Filters ###################################################### 

================================================================================================================
166- change this for home.html 
<h1 class="mt-3">Homepage-Startseite</h1>






================================================================================================================--
167- change to lower case all titles and author of books




================================================================================================================
168- in book_list.html change this line 
<h1 class="mt-3">{{book.title|capfirst}}</h1>





================================================================================================================
169- Check this link. All first letter of titles should be capital
http://localhost:8000/books/






================================================================================================================
170- in book_detail.html change this line  
<h1 class="mt-3">{{ book.title|capfirst }}</h1>





================================================================================================================
171- Check above in this link, should be capital letter for title book 
http://localhost:8000/books/1/




================================================================================================================
172- in book_list.html change this code 
<p>{{book.description|truncatewords:10 }}</p>





================================================================================================================
173- Check this link, should limited description in 10 characters 
http://localhost:8000/books/





================================================================================================================
174- in book_detail.html change this line 
<p>Description: {{book.description|linebreaks}}</p>



================================================================================================================
175- check this link should correct lines with Enter 
http://localhost:8000/books/1/



================================================================================================================
176- in book_detail.html change this line 
<p>Author: {{book.author|title}}</p>





================================================================================================================
177- check this link should be capital all words of Author 
http://localhost:8000/books/1/






######################### Create New Template Filters ###################################################### 
######################### Create New Template Filters ###################################################### 
######################### Create New Template Filters ###################################################### 
######################### Create New Template Filters ###################################################### 



================================================================================================================

178- create in books directory > templatetags/__init__.py 




================================================================================================================
179- Create file in books/templatetags/book_tags.py 




================================================================================================================
180- add this codes in book_tags.py 
from django import template
register = template.Library()
# Create Custom lowercase
@register.filter
def To_lowerCase(value):
    return value.lower()


================================================================================================================-
181- add this code to first book_detail.html 
...
{% load book_tags %}
...





================================================================================================================
182- change this line in book_detail.html 
<p>Description: {{book.description|To_lowerCase|linebreaks}}</p>






================================================================================================================
183- Check this link should every letters of description to lower case -
http://localhost:8000/books/1/





######################### The site Beautification ###################################################### 
######################### The site Beautification ###################################################### 
######################### The site Beautification ###################################################### 
######################### The site Beautification ###################################################### 

================================================================================================================--
184- change this line in config/settings.py 
STATIC_URL = '/static/'




================================================================================================================
185- add this code after STATIC_URL in config/settings.py 
STATICFILES_DIRS = [str(BASE_DIR.joinpath('static'))]




================================================================================================================
186-  Create static directory in current project directory 
static



================================================================================================================--
187- add fonts/*.ttf files to static directory 





================================================================================================================-
188- add css/*.css files to static directory 





================================================================================================================--
189- add icons/*.png files to static directory 




================================================================================================================
190- add nav tag from A file designed by the front-end to _base.html 
<nav class="navbar navbar-expand-lg navbar-dark bg-info" dir="rtl">
    <div class="container">
        <a class="navbar-brand" href="#">
            <img src="icons/book.png" alt="" height="30"
                 class="d-inline-block align-text-top">
        </a>
        <a class="navbar-brand mx-3" href="#">کتاب یار</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNavAltMarkup"
                aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
            <div class="navbar-nav">
                <a class="nav-link active" aria-current="page" href="#">خانه</a>
                <a class="nav-link" href="#">اضافه کردن کتاب</a>
            </div>
        </div>
        <div class="mx-2 text-white">خوش آمدی محمدهادی | <a class="link-light text-decoration-none" href="#">خروج</a></div>
    </div>
</nav>


================================================================================================================
191- Check this link should be added nav bar 
http://localhost:8000/


================================================================================================================-
192- change entire head tag in _base.html 
<!-- Required meta tags -->
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
<link rel="stylesheet" href="css/style.css">
<title>{% block page_title %}{% endblock %}</title>



================================================================================================================
193- add this to block content book_list.html 
<div class="container mt-4">
    <div class="row flex-row-reverse justify-content-md-center">
        <div class="card m-2" style="max-width: 45%">
            <div class="row g-0 h-100" dir="rtl">
                <div class="col-md-4">
                    <img src="https://newcdn.fidibo.com/images/books/69249_94233_normal.jpg"
                         class="img-fluid rounded-start" alt="...">
                </div>
                <div class="col-md-8 h-100">
                    <div class="d-flex flex-column justify-content-between h-100">
                        <div class="card-body">
                            <h3 class="card-title"><strong>اثر مرکب</strong></h3>
                            <p class="card-text pt-3">امروزه کتاب‌های موفقیت بسیار زیادی به انتشار رسیده است و در شبکه‌های مجازی و رسانه‌های مختلف افراد بسیاری هستند که رمز و رازهای موفقیت را به ما ارائه می‌کنند. شاید بتوان گفت استراتژی‌های موفقیت دیگر یک راز نیستند و بسیاری از افراد از آنها مطلع هستند. اما علت چیس</p>
                            <p class="text-muted">نویسنده: دارن هاردی</p>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<footer class="bg-light text-center text-lg-start mt-5">
  <div class="text-center bg-grey">
      <p>دوره آموزشی جنگو <a class="text-dark" href="https://codingyar.com/" target="_blank">کدینگ یار</a></p>
  </div>
</footer>






================================================================================================================
194- check this link should be added end of page 
http://localhost:8000/books/




================================================================================================================
195- change book_list.html like this 
{% extends '_base.html' %}
{% block page_title %}Book list{% endblock %}
{% block content%}
<div class="container mt-4">
    <div class="row flex-row-reverse justify-content-md-center">
        {% for book in books %}
            <div class="card m-2" style="max-width: 45%">
                <div class="row g-0 h-100" dir="rtl">
                    <div class="col-md-4">
                        <img src="https://cdn.whats-on-netflix.com/wp-content/uploads/2023/09/11100810/preview-blue-eyed-samurai-netflix-anime-november.jpg"
                                class="img-fluid rounded-start" alt="...">
                    </div>
                    <div class="col-md-8 h-100">
                        <div class="d-flex flex-column justify-content-between h-100">
                            <div class="card-body">
                                <a href="{{ book.get_absolute_url }}">
                                    <h1 class="card-title mt-3">{{book.title|capfirst}}</h1>
                                </a>
                                <p class="card-text pt-3">{{book.description|truncatewords:10 }}</p>
                                <p class="text-muted">Author: {{book.author|title}}</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        {% endfor %}
    </div>
</div>
    <a href="{% url 'book_create' %}" class="btn btn-success">Create New Book</a>
    <footer class="bg-light text-center text-lg-start mt-5">
      <div class="text-center bg-grey">
          <p>دوره آموزشی جنگو <a class="text-dark" href="https://codingyar.com/" target="_blank">کدینگ یار</a></p>
      </div>
    </footer>
{% endblock %}




================================================================================================================
196- add this in first Line _base.html 
{% load static %}



================================================================================================================
197- change this line in _base.html -
<link rel="stylesheet" href="{% static 'css/style.css' %}">






================================================================================================================
198- change all book_detail.html like this 
{% extends '_base.html' %}
{% load book_tags %}
{% block page_title %}{{book.title}}{% endblock %}
{% block content%}
    <div class="container mt-5" dir="rtl">
        <div class="">
            <div class="">
                <div class="d-flex justify-content-center">
                    <div class="row w-sm-75 w-100">
                        <div class="col-xs-12 col-md-3 d-flex justify-content-center">
                            <div>
                                <img src="https://cdn.whats-on-netflix.com/wp-content/uploads/2023/09/11100810/preview-blue-eyed-samurai-netflix-anime-november.jpg"
                                    class="img-fluid rounded-start" alt="...">
                            </div>
                        </div>
                        <div class="col-xs-12 col-md-6 text-center text-md-end mt-md-1 mt-4">
                            <h1 class="mt-3">{{ book.title|capfirst }}</h1>
                            <h5 class="small my-1"><span class="text-muted">Author: </span>{{book.author|title}}</h5>
                        </div>
                        <div class="col-xs-12 col-md-3 d-flex flex-column">
                            <h3 class="align-self-center pt-2 text-muted align-self-md-end">
                                Price: {{book.price}}
                                <a href="{% url 'book_update' book.id %}" class="btn btn-warning mt-3">Edit - bearbeiten</a>
                                <a href="{% url 'book_delete' book.id %}" class="btn btn-danger mt-3">Delete - Löschen</a>
                                <a href="{% url 'book_list' %}" class="btn btn-success mt-3">Back - zurück kommen</a>
                            </h3>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-center">
                    <div class="my-3 p-5 w-sm-75 w-100">
                        Description: {{book.description|To_lowerCase|linebreaks}}
                    </div>
                </div>
                <div class="d-flex justify-content-center">
                    <div class="card shadow my-3 p-5 w-sm-75 w-100">
                        <h2 class="mb-5">Comment:</h2>
                        <div class="border-bottom mb-3">
                            <h5 class="mb-3">نوشین توکلی</h5>
                            <p>با سلام چند تا نکته میخواستم بگم اول اینکه من جزء دسته از آدمایی بودم که میگفتم کتاب خوندن لذتش
                                به اینه که آدم کتابو بگیره دستش و بخونه اما واقعا میگم فیدیبو تو زمینه کاری خودش داره خوب عمل
                                میکنه امیدوارم روز به روز موفق تر بشه ممنون بابت کتابهای خوبی که میزارید چونکه خیلی به روزه</p>
                        </div>
                        <div class="border-bottom mb-3">
                            <h5 class="mb-3">نوشین توکلی</h5>
                            <p>با سلام چند تا نکته میخواستم بگم اول اینکه من جزء دسته از آدمایی بودم که میگفتم کتاب خوندن لذتش
                                به اینه که آدم کتابو بگیره دستش و بخونه اما واقعا میگم فیدیبو تو زمینه کاری خودش داره خوب عمل
                                میکنه امیدوارم روز به روز موفق تر بشه ممنون بابت کتابهای خوبی که میزارید چونکه خیلی به روزه</p>
                        </div>
                        <div>
                            <h5 class="mb-3">نوشین توکلی</h5>
                            <p>با سلام چند تا نکته میخواستم بگم اول اینکه من جزء دسته از آدمایی بودم که میگفتم کتاب خوندن لذتش
                                به اینه که آدم کتابو بگیره دستش و بخونه اما واقعا میگم فیدیبو تو زمینه کاری خودش داره خوب عمل
                                میکنه امیدوارم روز به روز موفق تر بشه ممنون بابت کتابهای خوبی که میزارید چونکه خیلی به روزه</p>
                        </div>
                    </div>
                </div>
                <div class="d-flex justify-content-center">
                    <div class="card shadow my-3 p-5 w-sm-75 w-100">
                        <h3>نظر خود را وارد کنید:</h3>
                        <form method="POST">
                            <div class="form-group py-2">
                                <label class="py-1" for="author_name">نام شما:</label>
                                <input type="text" class="form-control" placeholder="علی علوی" name="author_name">
                            </div>
                            <div class="form-group py-2">
                                <label class="py-1" for="email">ایمیل شما:</label>
                                <input type="email" class="form-control" placeholder="example@gmail.com" name="email">
                            </div>
                            <div class="form-group py-2">
                                <label class="py-1" for="comment_text">متن نظر:</label>
                                <textarea class="form-control" name="text" rows="3"
                                        placeholder="نظر خود را اینجا وارد کنید."></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">ارسال</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}



================================================================================================================
199- Check this link 
http://localhost:8000/books/1/
http://localhost:8000/books/2/



================================================================================================================
200- change book_create.html like this 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}Create{% endblock %}
{% block content%}
<div class="container mt-4" dir="rtl">
    <div class="row">
        <div class="col-9">
            <div class="card shadow my-3">
                <h5 class="card-header bg-success text-light px-5">Create New Book</h5>
                <div class="px-5 pt-3 pb-5">
                    <form method="POST">
                        {% csrf_token %}
                        {{form|crispy}}
                        <button class="btn btn-success mt-3" type="submit">Create</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-3">
                <div class="card my-3 shadow">
                    <h5 class="card-header bg-warning text-light">Guide - Führung</h5>
                    <div class="card-body">
                        <p class="card-text">
                            اطلاعات کتاب را در فرم این صفحه وارد کنید و سپس بر روی دکمه ذخیره کلیک کنید.
                        </p>
                        
                    </div>
                </div>
                <a href="{% url 'book_list' %}" class="btn btn-success">Back - zurück kommen</a>
        </div>
    </div>
</div>
{% endblock %}


================================================================================================================
201- Change this line in _base.html 
<img src="{% static 'icons/book.png' %}" alt="" height="30"



================================================================================================================
202- Check browser + Refresh should added book icon to first 



================================================================================================================
203- Change this line in _base.html 
...
<a class="nav-link active" aria-current="page" href="{% url 'book_list' %}">Books</a>
...
<a class="nav-link" href="{% url 'book_create' %}">Add a new book</a>
...
<div class="mx-2 text-white">
    {% if user.is_authenticated %}
    Welcome {{user.username}} | <a class="link-light text-decoration-none" href="{% url 'logout'%}">Logout</a>
    {% endif %}
</div>
...



================================================================================================================
204- check this link in navbar should shows this text 
Welcome YourCustomUserName 😎 Logout 



================================================================================================================
205- Rechange this in _base.html 
{% if user.is_authenticated %}
    <form action="{% url 'logout' %}" method="post">
        {% csrf_token %}
        <p>Welcome {{ user.username }} - <button type="submit">Logout</button>
        </p>
    </form>
{% else %}
    <a href="{% url 'login' %}">Login</a> - <a href="{% url 'signup' %}">Signup</a>
{% endif %}





================================================================================================================
206- Rechange this with login.html 





================================================================================================================
207- Rechange this for signup.html 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}
Signup-Anmeldung
{% endblock %}
{% block content%}
    <div class="d-flex justify-content-center mt-5" dir="rtl">
        <div class="col-xl-3 col-lg-4 col-md-5 col-sm-5 col-xs-6 bg-white m-3 m-sm-5 border rounded px-4 pt-4 pb-3 shadow">
            <form method="post">
                <h1 class="text-center">Signup</h1>
                {% csrf_token %}
                {{ form|crispy }}
        
                <button type="submit" class="btn btn-success mt-3 w-100">Sigup</button>
            </form>
            <div class="line-with-middle-sep">
                <span>
                    OR
                </span>
                <a href="{% url 'login'%}" class="btn btn-primary mt-2 mb-3 w-100">Login</a>
            </div>
        </div>
    </div>
{% endblock %}



================================================================================================================
208- Rechange in login.html 
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}
Login-eingeben
{% endblock %}
{% block content%}
    <div class="d-flex justify-content-center mt-5" dir="rtl">
        <div class="col-xl-3 col-lg-4 col-md-5 col-sm-5 col-xs-6 bg-white m-3 m-sm-5 border rounded px-4 pt-4 pb-3 shadow">
            <form method="post">
                <h1 class="text-center">Login</h1>
                {% csrf_token %}
                {{ form|crispy }}
                <div class="d-flex justify-content-between align-items-center">
                    <div class="mt-2">
                        <a class="text-decoration-none" href="{% url 'password_reset'%}">?Forgot password</a>
                    </div>
                </div>
                <button type="submit" class="btn btn-success mt-3 w-100">Login</button>
                <div class="line-with-middle-sep">
                    <span>
                        یا
                    </span>
                </div>
                <a href="{% url 'signup' %}" class="btn btn-primary mt-2 mb-3 w-100">Sigup</a>
            </form>
        </div>
    </div>
{% endblock %}





================================================================================================================
209- add this in head tag _base.html 
{% block styles %}
{% endblock %}




================================================================================================================
210- add this is login.html 
{% block styles %}
    <link rel="stylesheet" href="{% static 'css/style.css' %}">
    <link rel="stylesheet" href="{% static 'css/login.css' %}">
{% endblock %}





================================================================================================================
211- add this in first login.html 
{% load static %}




================================================================================================================
212- Rechange password_reset_form.html  
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% load static %}
{% block styles %}
    <link rel="stylesheet" href="{% static 'css/style.css' %}">
    <link rel="stylesheet" href="{% static 'css/login.css' %}">
{% endblock %}
{% block page_title %}
Login-eingeben
{% endblock %}
{% block content%}
    <div class="d-flex justify-content-center mt-5" dir="rtl">
        <div class="col-xl-3 col-lg-4 col-md-5 col-sm-5 col-xs-6 bg-white m-3 m-sm-5 border rounded px-4 pt-4 pb-3 shadow">
            <form method="post">
                <h6 class="mt-3">Password Change</h6>
                <h6 class="mt-3">Kennwort ändern</h6>
                <h6 class="mt-3"></h6>
                {% csrf_token %}
                {{ form|crispy }}
                <button class="btn btn-success mt-3" type="submit">Confirm</button>

                <div class="mt-3 line-with-middle-sep">
                    <span>
                        یا
                    </span>
                </div>
                <button type="submit" class="btn btn-success mt-4 w-100">Login</button>
                <a href="{% url 'signup' %}" class="btn btn-primary mt-2 mb-3 w-100">Sigup</a>
            </form>
        </div>
    </div>
{% endblock %}


############################                                ############################
############################  Image-16 Add Image to Web App ############################
############################                                ############################
############################                                ############################
Instal pillow package 
https://pypi.org/project/Pillow/
https://pillow.readthedocs.io/en/stable/


================================================================================================================
213- in Terminal write 
pipenv install pillow




================================================================================================================
214- in Terminal write 
pipenv requirements > requirements.txt




================================================================================================================
215- add this into settings.py  
MEDIA_URL = '/media/'
MEDIA_ROOT = str(BASE_DIR.joinpath('media'))





================================================================================================================
216- Create directory media 
media\covers




================================================================================================================
217- import in config/urls.py 
from django.conf.urls.static import static
from django.conf import settings



================================================================================================================
218- add this end of urlpatterns 
...
urlpatterns = [
...
] + static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)




================================================================================================================
219- add this in books/models.py in Book class  
...
cover = models.ImageField(upload_to='covers/', blank=True)
...




================================================================================================================
220- in Terminal 
python manage.py makemigrations

Output:
    Migrations for 'books':
    books/migrations/0002_book_cover.py
        - Add field cover to book




================================================================================================================
221- in Terminal 
python manage.py migrate

Output:
    Operations to perform:
        Apply all migrations: accounts, admin, auth, books, contenttypes, sessions
    Running migrations:
        Applying books.0002_book_cover... OK





================================================================================================================
222- go to this link or anothers  
http://localhost:8000/admin/books/book/1/change/
OR
http://localhost:8000/admin/books/book/2/change/
OR
http://localhost:8000/admin/books/book/3/change/





================================================================================================================
223- Check item for Cover upload should be shows in browser 





================================================================================================================
224- Add image for your books 






================================================================================================================
225- Rechange this in book_detail.html 
...
<img src="{{ book.cover.url }}"
...





================================================================================================================
226- Rechange in book_list.html 
...
<img src="{{ book.cover.url }}"
...




================================================================================================================
227- add this to book_list.html & book_detail.html 
...
{% if book.cover %}
    <img src="{{ book.cover.url }}" class="img-fluid rounded-start" alt="...">
{% endif  %}
...





================================================================================================================
228- change this part of code in _base.html 
...
<a class="navbar-brand mx-3" href="/">Django Images</a>
...






================================================================================================================
229- add 'cover' in books/views.py in class BookUpdateView 
...
class BookUpdateView(generic.UpdateView):
    ...
    fields = ['title', 'author', 'description', 'cover']
    ...
...





================================================================================================================
230- Add shadow to class in tag in book_detail.html
<img   src="{{ book.cover.url }}" class="shadow img-fluid rounded-start" alt="...">
                                         -------




================================================================================================================
231- in books/views.py add this 'cover'
...
class BookCreateView(generic.CreateView):
    model = Book
    fields = ['title', 'author', 'description', 'price', 'cover']
    #                                                    --------
    template_name = 'books/book_create.html'    
...





================================================================================================================
232- add this attribute in form tag book_create.html 
                                  & book_update.html

...
<form method="POST" enctype="multipart/form-data">
....





================================================================================================================
233- Rechange book_update.html
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}Edit: {{ book.title }}{% endblock %}
{% block content%}
    <h1 class="mt-4 d-flex justify-content-center">Edit Book</h1>
<div class="container mt-4" dir="rtl">
    <div class="row">
        <div class="col-9">
            <div class="card shadow my-3">
                <h5 class="card-header bg-success text-light px-5">Create New Book</h5>
                <div class="px-5 pt-3 pb-5">
                    <form method="POST" enctype="multipart/form-data">
                        {% csrf_token %}
                        {{form|crispy}}
                        <button class="btn btn-warning mt-3" type="submit">Edit - Speichern</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-3">
                <div class="card my-3 shadow">
                    <h5 class="card-header bg-warning text-light">Guide - Führung</h5>
                    <div class="card-body">
                        <p class="card-text">
                            Enter the book information in the form on this page and then click on the save button.
                            <br>
                            Geben Sie die Buchinformationen in das Formular auf dieser Seite ein und klicken Sie dann auf die Schaltfläche „Speichern“.
                        </p>
                    </div>
                </div>
                <a href="{% url 'book_list' %}" class="btn btn-success">Back - zurück kommen</a>
        </div>
    </div>
</div>
{% endblock %}








================================================================================================================
234- Rechange book_create.html
{% extends '_base.html' %}
{% load crispy_forms_tags %}
{% block page_title %}Create{% endblock %}
{% block content%}
<h1 class="mt-4 d-flex justify-content-center">Create New Book</h1>
<div class="container mt-4" dir="rtl">
    <div class="row">
        <div class="col-9">
            <div class="card shadow my-3">
                <h5 class="card-header bg-success text-light px-5">Create New Book</h5>
                <div class="px-5 pt-3 pb-5">
                    <form method="POST" enctype="multipart/form-data">
                        {% csrf_token %}
                        {{form|crispy}}
                        <button class="btn btn-success mt-3" type="submit">Create</button>
                    </form>
                </div>
            </div>
        </div>
        <div class="col-3">
                <div class="card my-3 shadow">
                    <h5 class="card-header bg-warning text-light">Guide - Führung</h5>
                    <div class="card-body">
                        <p class="card-text">
                            اطلاعات کتاب را در فرم این صفحه وارد کنید و سپس بر روی دکمه ذخیره کلیک کنید.
                        </p>
                        
                    </div>
                </div>
                <a href="{% url 'book_list' %}" class="btn btn-success">Back - zurück kommen</a>
        </div>
    </div>
</div>
{% endblock %} 







================================================================================================================
235- add this to books/views.py > into class BookListView 
...
paginate_by = 4 
...







================================================================================================================
236- add this code to book_list.html > in end of page I prefer 
...
<nav aria-label="Page navigation example">
    <ul class="pagination justify-content-center">
        {% if page_obj.has_previous %}
            <li class="page-item"><a class="page-link" href="?page={{ page_obj.previous_page_number }}">Previous</a></li>
        {% endif %}
        <li class="page-item"><a class="page-link" href="#">{{ page_obj.number }}</a></li>
        {% if page_obj.has_next %}
            <li class="page-item"><a class="page-link" href="?page={{ page_obj.next_page_number }}">Next</a></li>
        {% endif %}
    </ul>
</nav>
...








================================================================================================================
237- Import into books/models.py
from django.contrib.auth import get_user_model






================================================================================================================
238- Create new class for  'Comments' to books/models.py

class Comment(models.Model):
    user = models.ForeignKey(get_user_model(), on_delete=models.CASCADE)
    book = models.ForeignKey(Book, on_delete=models.CASCADE)
    text = models.TextField()
    datetime_created = models.DateTimeField(auto_now_add=True)

    def __str__(self):
        return f'{self.user}: {self.text}'








================================================================================================================
239- in Terminal 
python manage.py makemigrations 

Output:
    Migrations for 'books':
      books/migrations/0003_comment.py
        - Create model Comment






================================================================================================================
240- in Terminal 
python manage.py migrate

Output:
    Operations to perform:
      Apply all migrations: accounts, admin, auth, books, contenttypes, sessions
    Running migrations:
      Applying books.0003_comment... OK






================================================================================================================
241- add 'Comment' to books/admin.py 
from .models import Comment






================================================================================================================
242- register Comment
admin.site.register(Comment)






================================================================================================================
243- Check admin panel, Comment should be added
http://localhost:8000/admin/ 







================================================================================================================
244- Go to this link and Check, should have added these
     User + Book + Text

http://localhost:8000/admin/books/comment/add/ 







================================================================================================================
245- Create this class in books/admin.py

class CommentAdmin(admin.ModelAdmin):
    list_display = ('user', 'book', 'text', 'datetime_created', )









================================================================================================================
246- update class of CommentAdmin in this line in books/admin.py
admin.site.register(Comment, CommentAdmin)









================================================================================================================
247- Check this link should shows details and changing admin panel for Comments
http://localhost:8000/admin/books/comment/









================================================================================================================
248- convert to plaintext this line in books/admin.py like this
# admin.site.register(Comment, CommentAdmin)






================================================================================================================
249- add this above class CommentAdmin in books/admin.py
@admin.register(Comment)







================================================================================================================
250- Check again this link, should be similar before
http://localhost:8000/admin/books/comment/









================================================================================================================
251- add this to books/models.py > class Comment > book variable > related_name 
book = models.ForeignKey(Book, on_delete=models.CASCADE, related_name='comments')
#                                                       --------------------------









================================================================================================================
252- in Terminal
python manage.py makemigrations books

Output:
    Migrations for 'books':
      books/migrations/0004_alter_comment_book.py
        - Alter field book on comment






================================================================================================================
253- in Terminal
python manage.py migrate

Output:
    Operations to perform:
      Apply all migrations: accounts, admin, auth, books, contenttypes, sessions
    Running migrations:
      Applying books.0004_alter_comment_book... OK





================================================================================================================
254- 





================================================================================================================
255-





================================================================================================================
256-





================================================================================================================
257-


================================================================================================================
258-
================================================================================================================
259-
================================================================================================================
260-
================================================================================================================
261-
================================================================================================================
262-
================================================================================================================
263-
================================================================================================================
264-
================================================================================================================
265-
================================================================================================================
266-
================================================================================================================
267-
================================================================================================================
268-
================================================================================================================
269-
================================================================================================================
270-
================================================================================================================
271-
================================================================================================================
272-
================================================================================================================
273-
================================================================================================================
274-
================================================================================================================
275-
================================================================================================================
276-
================================================================================================================
277-

